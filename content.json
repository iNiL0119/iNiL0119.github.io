{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://blog.inil0119.com"},"pages":[],"posts":[{"title":"第二章-优化","slug":"chapter2","date":"2018-11-06T03:34:30.000Z","updated":"2018-11-21T12:26:10.793Z","comments":true,"path":"2018/11/06/chapter2/","link":"","permalink":"http://blog.inil0119.com/2018/11/06/chapter2/","excerpt":"","text":"前言&emsp;&emsp;经过第一天的努力，博客已经可以正常运行了，但还是有很多地方需要优化。 汉化&emsp;&emsp;以导航栏为例，现在导航栏都是英文，通过全局搜索可以发现/themes/pure/languages/default.yml即为默认的语言设置文件，如图1。 图1 默认语言设置 &emsp;&emsp;例如，可以修改menu选项下的参数，比如将home修改为中文首页，如图2，刷新网页后左侧导航的Home变为中文首页。&emsp;&emsp;注意：其实这里不需要处理中文语言，不需要一个个去改成对应中文（后来发现），可以通过设置主题配置文件_config.yml中的language字段为zh-CN即可。 图2 修改默认语言 增加文章目录&emsp;&emsp;当前版本Hexo可以通过在.md文章头部添加toc字段，如图3。 图3 添加文章目录 &emsp;&emsp;因为不熟悉，一开始全局找这个toc到底在哪里设置，但是找了好久都没找到，后来只能通过google来解决了。在这个过程中，来看一下涉及到的相关文件。一个文件是/themes/pure/layout/_partial/post/nav.ejs，如图4。 图4 nav.js &emsp;&emsp;这个文件对应的就是文章底部的bar-footer，而文章目录对应就是toogle-toc，如图5。 图5 bar-footer &emsp;&emsp;通过代码可以看到，文章目录显示的条件是if (!index &amp;&amp; theme.config.toc &amp;&amp; post.toc)，这里的index===false，不确定是什么意思，但是在/themes/pure/layout/post.ejs代码中有两个index=false，我推测这里的意思是只要是当前文章内容或者显示文章目录的就指定index为false，如图6；theme.config.toc可以通过主题配置文件_config.yml中的config.toc确认为true，意思是开启文章目录导航；最后post.toc是指文章是指当前文章是否开启TOC功能。用法本节开头已经介绍，这里需要注意，每篇文章开头都需要设置toc为true。 图6 post.ejs &emsp;&emsp;另外一个文件是/themes/pure/layout/_partial/sidebar-toc.ejs，代码内容如图7，条件判断和上面的一致。 图7 sidebar-toc.ejs 搜索&emsp;&emsp;在pure主题的配置文件中找到search项。1234# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search baidu: false # you need to disable other search engines to use Baidu search &emsp;&emsp;尝试用insigth插件实现搜索功能，依据说明先安装hexo-generator-json-content。1$ npm install hexo-generator-json-content --save &emsp;&emsp;看到这里，突然想起不管是本地还是线上，系统都会报404的问题，有个文件没找到，而这个文件本地环境中是http://localhost:4000/content.json ，线上是http://blog.inil0119.com/content.json，这个文件是否和这个插件有关系呢？&emsp;&emsp;参考一下hexo pure主题推荐的博客https://blog.cofess.com/，打开控制台可以看到https://blog.cofess.com/content.json内容如图8。 图8 参考content.json &emsp;&emsp;该json文件的内容刚好对应搜索框中的内容，如图9。 图9 搜索框 &emsp;&emsp;是否如猜想一般呢，继续往下试试吧。&emsp;&emsp;安装好插件之后，刷新本地服务，但是没有任何变化，重新构建下，刷新，页面如图10。 图10 搜索弹框 &emsp;&emsp;和猜想的一样，也就是说此时content.json已经存在了，验证下，如图11。 图11 本地content.json 代码压缩&emsp;&emsp;通过hexo-neat实现压缩功能。1$ npm install hexo-neat --save &emsp;&emsp;并在系统配置文件_config.yml中添加配置项。12345678910111213141516# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js' &emsp;&emsp;这样，的确可以将html、css、js等文件压缩，但是实际可能效果不是很明显，例如压缩前项目文件总大小为7.6mb，但是压缩后为7.7mb。 评论&emsp;&emsp;pure主题集成了Disqus、友言、来必力、gitment、Gitalk、Valine六种评论系统，其中友言已经关停，Disqus是国外的一款评论系统，可能在国内支持不太友好，来必力的风格好像不太喜欢，因此最后选择Valine试试效果。虽然Valine还在开发阶段，但是看起来风格还不错，不知道最终的效果如何，现在上手。&emsp;&emsp;从官网上可以看到，Valine基于Learncloud，特性如下。 快速 安全 Emoji 😉 无后端实现 MarkDown 全语法支持 轻量易用(~15kb gzipped) 文章阅读量统计 v1.2.0+&emsp;&emsp;具体设置参考quick start最后是这个样子的，如图12。怎么说呢，好像还是不太好，虽然可以非登录评论，但是后果是必须在评论框上方预设个人信息的输入框，对于比较追求完美的我，肯定是不能接受的，所以准备换gitment试试。图12 Valine评论框 &emsp;&emsp;在主题配置文件总设置gitment，github个人数据可以通过https://api.github.com/users/用户名查看，只需要将comment.type换成gitment，填写githubID即可，最终效果如图13。 图13 Gitment评论框 &emsp;&emsp;非登录状态下不能评论，样式也没问题，不错。但是此时会发现有个链接报404，那是此时你还没有权限请求Github的API，需要通过创建一个新的授权应用来申请Github权限。&emsp;&emsp;首先进入settings/Developer settings，点击创建按钮，如图14。 图14 创建授权应用 &emsp;&emsp;填写号信息，点击注册按钮，如图15。 图15 注册信息 &emsp;&emsp;注意：若是绑定个人域名就不能使用yourname.github.io作为Homepage URL和Authorization callback URL。gitment会报Error: Comments Not Initialized错误。&emsp;&emsp;继续，将新生成的Client ID和Client Secret赋值给对应的配置属性，这里需要注意Homepage URL与Authorization callback URL都为当前博客地址，如果没有自己的域名博客地址，则填写github网址。另外，gitment.githubID可不填写，或者填入github id或者github用户名（建议用户名）。 Gitalk&emsp;&emsp;由于Gitment初始化和汉化的问题，最后的最后，还是选择了Gitalk，虽然默认订阅issue（相关issue），每次有其他的评论都会邮件提醒比较烦（需手动关闭该issue订阅按钮），其他还不错，其余的功能还在摸索中。 pv统计&emsp;&emsp;在主题配置文件中搜索pv属性，可以看到busuanzi和LeanCloud两种，试用了busuanzi之后发现其职能统计文章内的pv数，而不能在首页显示，所以决定用LeanCloud。&emsp;&emsp;首先登陆官网，并登陆控制台，创建应用如图16。 图16 创建LeanCloud应用 &emsp;&emsp;点击存储，点击创建Class，输入Class名称Counter，最后点击创建按钮，操作如图17。&emsp;&emsp;注意：Class名称必须为Counter，参考网上的说法是主题系统会访问应用的Class名为Counter。 图17 创建Class &emsp;&emsp;点击设置，点击应用Key，可以找到App ID和App Key，并将其赋值给主题配置文件中对应的pv.leancloud.app_id与pv.leancloud.app_key；接着在设置中点击安全中心，在Web安全域名下输入博客的域名地址，只有该域名可以访问LeanCloud系统，因此只会记录在这个域名下的访客数据。&emsp;&emsp;重新构建部署。&emsp;&emsp;注意：如果在调试阶段，还需要把http://127.0.0.1:4000添加进去。记得之后要删掉。&emsp;&emsp;刷新页面，发现页面标题下显示计数icon且数值为0，但是在控制台显示Uncaught ReferenceError: AV is not defined问题。&emsp;&emsp;Oops…something get wrong! 搞了半天，官网论坛和google都走了一遍，没看到有效的解决方式，如果有人知道如何解决，可以在评论处告知，好吧，还是换成busuanzi吧… SEO&emsp;&emsp; 豆瓣书单参考 Hexo—如何设置文章目录（TOC） Hexo博客主题pure使用说明 Hexo博客主题pure修改记录 hexo+github+gitment评论系统","categories":[],"tags":[]},{"title":"第一章-启程","slug":"chapter1","date":"2018-11-05T14:25:27.000Z","updated":"2018-11-20T14:01:44.131Z","comments":true,"path":"2018/11/05/chapter1/","link":"","permalink":"http://blog.inil0119.com/2018/11/05/chapter1/","excerpt":"","text":"前言&emsp;&emsp;颓废了许久，不想继续这种碌碌无为的生活，用博客写点（搬运）东西，不管是技术上还是生活中，也许这样还能找回一点点的激情和动力。长话短说，正式开始我的博客的第一章。 安装Hexo1$ npm install -g hexo-cli 后续可以通过 npm update -g hexo更新 创建项目123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 运行12$ hexo g # hexo generate$ hexo s # hexo server，服务地址http://localhost:4000/ &emsp;&emsp;运行如图1。 图1 landscape 更改主题&emsp;&emsp;打开系统配置文件_config.yml，定位到theme字段，默认为landsacpe，如图1。通过更改该值可以改变系统主题，但首先要找到一个合适的主题，可以在这里寻找适合自己的主题，并可以通过git clone将主题引入自己的博客。&emsp;&emsp;这里以next为例，通过github搜索next，这里需要注意hexo主题next有两个如图2，iissnan貌似已经停更，需要选择theme-next。 图2 github中next主题 &emsp;&emsp;在当前根目录下，git clone https://github.com/theme-next/hexo-theme-next themes/next 并将_config.yml中theme改为next。&emsp;&emsp;Ctrl+C停止服务，并在终端重新输入：123$ hexo clean$ hexo g$ hexo s &emsp;&emsp;刷新http://localhost:4000/，新的主题如图3。 图3 lnext默认主题Muse 修改Next配置文件&emsp;&emsp;Next有4中主题，可以修改/themes/next/_config.yml中的scheme切换主题。切换scheme可以预览各种主题的区别： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白Mist - Muse 的紧凑版本，整洁有序的单栏外观Pisces - 双栏 Scheme，小家碧玉似的清新Gemini - 双栏 Scheme，与 Pisces 几乎一样 &emsp;&emsp;试用Gemini主题如图4。 图4 Gemini hexo配置&emsp;&emsp;具体的配置说明可以参考官网配置，一开始只需要关注_config.yml系统配置文件、/themes主题文件夹、和/source/_posts（新创建的文章将保存在该文件夹）。 常用命令1234567$ hexo new \"postName\" #新建文章$ hexo new page \"pageName\" #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，'Ctrl + C'关闭server）$ hexo deploy #将.deploy目录部署到GitHub$ hexo help # 查看帮助$ hexo version #查看Hexo的版本 github配置&emsp;&emsp;创建新项目，注意repo名称格式为用户名.github.io，例如iNiL0119.github.io，然后在浏览器中输入https://inil0119.github.io/ 测试是否创建成功。&emsp;&emsp;设置系统配置文件_config.yml，修改deploy配置项如图5。 图5 github部署设置 &emsp;&emsp;注意：冒号后面必须空一格 部署1$ hexo d # hexo deploy &emsp;&emsp;此时报错：ERROR Deployer not found: git&emsp;&emsp;解决办法：1$ npm install hexo-deployer-git --save &emsp;&emsp;再次运行hexo d，成功部署，此时/public代码上传到github，如图6。 图6 部署到github &emsp;&emsp;刷新https://inil0119.github.io/，显示最新Next Gemini主题。&emsp;&emsp;对比Next最终还是决定用pure主题，因为比较小清新，而且功能比较完整，系统界面如图7。 图7 pure主题 绑定域名&emsp;&emsp;解析设置如图8。 图8 域名解析 &emsp;&emsp;浏览器输入inil0119.com，网站404错误如图9，说明域名已经映射到github网站，还需要设置github网站向域名的映射。 图9 404错误 &emsp;&emsp;进入github仓库，点击Create new file，文件名为CNAME如图10，并单击下方的Commit new file按钮。 图10 创建CNAME文件 &emsp;&emsp;之后，在浏览器输入最新的域名地址，成功显示Blog内容，说明绑定成功了。 部署问题&emsp;&emsp;再重新走一遍部署流程hexo clean -&gt; g -&gt; d，此时发现网站又变成404了，github上看看发现原来的CNAME被强制push掉了，原来如此。解决方式也很简单，就是在本地项目中添加CNAME文件，注意将CNAME添加到/source目录下，部署之后就正常了。 其他Error&emsp;&emsp;1. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line …&emsp;&emsp;解决办法：_config.yml中配置项的冒号后面要用空格隔开&emsp;&emsp;2. 中文乱码问题&emsp;&emsp;解决办法：将内容所在文件的编码改为UTF8格式 参考 Hexo官网 用Hexo + github搭建自己的博客 — 再也不用羡慕别人了！ Hexo搭建个人博客并部署到Github 新手用hexo和github搭建属于自己的博客","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-11-02T10:27:08.488Z","updated":"2018-11-07T09:32:11.558Z","comments":true,"path":"2018/11/02/hello-world/","link":"","permalink":"http://blog.inil0119.com/2018/11/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}