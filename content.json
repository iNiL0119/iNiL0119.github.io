{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"https://blog.inil0119.com"},"pages":[{"title":"书单","date":"2018-11-22T08:52:13.721Z","updated":"2018-11-05T03:06:15.000Z","comments":false,"path":"books/index.html","permalink":"https://blog.inil0119.com/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2018-11-22T09:57:43.260Z","updated":"2018-11-22T09:57:43.259Z","comments":false,"path":"about/index.html","permalink":"https://blog.inil0119.com/about/index.html","excerpt":"","text":"个人详细介绍 111"},{"title":"分类","date":"2018-11-22T09:53:14.259Z","updated":"2018-11-05T03:06:15.000Z","comments":false,"path":"categories/index.html","permalink":"https://blog.inil0119.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-11-22T09:40:46.274Z","updated":"2018-11-05T03:06:15.000Z","comments":false,"path":"tags/index.html","permalink":"https://blog.inil0119.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"第三章-爬坑SEO","slug":"chapter3","date":"2018-11-22T13:37:36.000Z","updated":"2018-11-27T08:16:01.502Z","comments":true,"path":"2018/11/22/chapter3/","link":"","permalink":"https://blog.inil0119.com/2018/11/22/chapter3/","excerpt":"","text":"前言&emsp;&emsp;博客优化也差不多了，现在该让搜索引擎来识别和收入网站了。&emsp;&emsp;以下是百度百科对SEO的解释：SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是：为网站提供生态式的自我营销解决方案，让其在行业内占据领先地位，获得品牌收益；SEO包含站外SEO和站内SEO两方面；为了从搜索引擎中获得更多的免费流量，从网站结构、内容建设方案、用户互动传播、页面等角度进行合理规划，还会使搜索引擎中显示的网站相关信息对用户来说更具有吸引力。百度收入&emsp;&emsp;此时，百度并没有收入博客网站，可以通过在百度搜索框中输入site:网站域名来查询是否收入，如图1。图1 百度收入情况sitemap站点地图&emsp;&emsp;使用npm自动生成网站的sitemap，并将生成的sitemap提交到百度或者其他搜索引擎。12$ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save&emsp;&emsp;在系统配置文件中设置如下代码：12345# sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml&emsp;&emsp;执行完之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件，可以通过http://www.cherryblog.site/baidusitemap.xml查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。百度站点设置&emsp;&emsp;进入网站支持页，点击添加网站，如图2。图2 添加网站&emsp;&emsp;按照要求填写个人信息，最后输入网站信息，如图3。图3 输入网站信息&emsp;&emsp;因为要选择协议头，以为自己的博客此时还是http协议，想到以后肯定要切换到https，还不如此时就换了。&emsp;&emsp;登录腾讯云官网，进入控制台证书列表页，点击申请证书按钮，一般腾讯云和阿里云都会有免费版的SSL可选，个人开发也够用，审核一般几分钟就会通过。审核通过之后，现在浏览器中输入协议为https的博客地址，一切正常，继续下一步。&emsp;&emsp;到第三步验证网站的时候有三种方式，选择第三种CNAME验证最简单，只需要添加一条解析即可，如图4。图4 选择验证方式&emsp;&emsp;注意：使用文件验证文件存放的位置需要放在source文件夹下，如果是html文件那么hexo就会将其编译，所以必须要加上的layout:false，这样就不会被hexo编译。（如果验证文件是txt格式的就不需要）&emsp;&emsp;最后等待验证结果。&emsp;&emsp;第二天一早看了下，结果没通过，原因是抓取失败，然后点击重新申请，看到弹框提示如图5，意思是使用 301 重定向，把网站的HTTP重定向到 HTTPS。图5 认证提示&emsp;&emsp;这就需要nginx设置301重定向，但是一番设置之后，却发现没有生效，查看指向的ip也不是腾讯云的服务器ip，这里推测是github的服务地址，自己捣鼓了一阵子没办法新建了个腾讯云工单，但是貌似对方对这一块也不是很了解，可能是非技术人员。&emsp;&emsp;接下去讲解如何将博客部署到腾讯云上。部署到腾讯云&emsp;&emsp;首先得有服务器，比如腾讯云服务器，并且安装了nginx，这里不做详细介绍，具体的设置方法可以通过腾讯云查询。Git安装&emsp;&emsp;配置方法可以参考这里，因为是CentOS，所以可以使用yum安装。1yum install git-core&emsp;&emsp;安装结束后，查看是否安装成功。1git --version&emsp;&emsp;注意：一般Linus系统上安装的Git环境是/usr/share/git-core或者/usr/local/git。&emsp;&emsp;但是这种方式安装Git的弊端是版本过低，通过github可以看到此时的git版本已经是2.x版本，而现在安装号的git版本只有1.x。&emsp;&emsp;删除旧版git：12yum remove git-coreyum remove git安装最新版本Git安装依赖库1yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel安装编译工具1yum install gcc perl-ExtUtils-MakeMaker package选择Git稳定版本安装到制定目录中，这里指定为/home/download（自定义）。12cd /home/downloadwget https://github.com/git/git/archive/v2.19.2.tar.gz解压1tar -zxvf v2.19.2.tar.gz进入git-2.19.2目录，编译12cd git-2.19.2make all prefix=/usr/local/git安装到指定目录下1make install prefix=/usr/local/git配置Git环境将git加入PATH目录中:1echo 'export PATH=$PATH:/usr/local/git/bin' &gt;&gt; /etc/bashrc使Git环境生效1source /etc/bashrc创建git仓库&emsp;&emsp;在home目录下新建项目文件/git/iNiL0119（Git用户名）1234cd /homemkdir git &amp;&amp; cd gitmkdir iNiL0119 &amp;&amp; cd iNiL0119 # iNiL0119(github username) git init --bare iNiL0119.github.io.git # iNiL0119.github.io(rep name)&emsp;&emsp;设置目录和用户权限12chown -R $USER:$USER /home/git/chmod -R 755 /home/git/创建nginx托管文件目录&emsp;&emsp;创建/home/git/iNiL0119/iNiL0119.github.io目录，用来项目代码托管。1234cd /home/git/iNiL0119/mkdir iNiL0119.github.iochown -R $USER:$USER iNiL0119.github.iochmod -R 755 iNiL0119.github.io创建钩子文件&emsp;&emsp;在/home/git/iNiL0119/iNiL0119.github.io.git中存在一个自动生成的hooks文件夹，新建一个钩子文件，用于自动部署。123cd /home/git/iNiL0119/iNiL0119.github.io.git/hookstouch post-receivevim post-receive&emsp;&emsp;进入编辑模式，添加两行代码，指定Git的工作树（源代码）和Git目录（配置文件等）。12#!/bin/bashgit --work-tree=/home/git/iNiL0119/iNiL0119.github.io --git-dir=/home/git/iNiL0119/iNiL0119.github.io.git checkout -f&emsp;&emsp;修改文件权限，使其可执行。1chmod +x /home/git/iNiL0119/iNiL0119.github.io.git/hooks/post-receive&emsp;&emsp;进入nginx配置目录，由于之前已经设置了nginx301重定向，所以继续在之前的配置文件上做修改。&emsp;&emsp;进入ngixn配置文件之后，在80端口服务中，新增1root /home/git/iNiL0119/iNiL0119.github.io;&emsp;&emsp;重启服务。1systemctl restart nginx设置站点配置文件&emsp;&emsp;在站点配置文件中，修改deploy属性设置。1234deploy: type: git repository: root@云服务器的IP地址:/home/git/iNiL0119/iNiL0119.github.io. git branch: master&emsp;&emsp;重新部署，错误提示如图6。图6 部署错误&emsp;&emsp;可能原因是在~/.ssh/中少了个known_hosts文件1Are you sure you want to continue connecting (yes/no)? yes&emsp;&emsp;输入Github密码，成功后显示1Hi iNiL0119! You've successfully authenticated, but GitHub does not provide shell access.&emsp;&emsp;后来还是出现这个错误提示，然后重新操作，包括git删了重新安装，环境重新设置，还是不行，最后将服务器ip在配置文件中搜索，结果没有找到…好吧，当时的心情只能用无语来表示。&emsp;&emsp;好了，重新部署一遍，结果如图7。图7 部署成功&emsp;&emsp;没问题，进入项目文件夹/home/git/iNiL0119/iNiL0119.github.is/看看，如图8。图8 服务器项目文件&emsp;&emsp;代码已经上传到服务器项目目录中。&emsp;&emsp;这个时候，线上代码是服务器中代码还是代理github仓库中的代码，其实这个时候不是很确定，所以需要将原来的绑定到github的CNAME解析改为A解析，重新下载证书并上传到服务器，因为之前设置了301重定向，但是此时的解析更新了，需要重新设置SSL证书。&emsp;&emsp;进入腾讯云控制台，进入SSL证书管理，申请域名重颁发，原有的证书起始时间不变，只是证书信息更新下。&emsp;&emsp;证书上传之后，浏览器输入http协议地址，自定重定向到https，博客正常运行。继续站点设置&emsp;&emsp;继续之前未完成的百度站点设置，可以点击这里参考，点击重新验证，等待下。&emsp;&emsp;注意：此时在百度中搜索site:域名还是搜不到，说明没有被收入，一个是百度收入你的网站需要一定的时间，另一个可能是缺少备案号（没有备案号，收入时间可能变长），需要网站先备案，等备案完成后，填写完整即可。其他修改&emsp;&emsp;由于协议更改，发现gitalk接口401错误，可能由于github登录认证那边的问题，需要修改从原来的http协议改为https的博客地址。但是不行，后来想想，可能是由于项目地址从github更改到服务器之后，导致授权失效。那么需要设置多个部署地址deploy.repository。&emsp;&emsp;所以需要部署到github仓库的同时也要部署到服务器上，原来的部署设置如图9。图9 部署到github&emsp;&emsp;可以改成类似如下的设置，repo以k-v形式设置即可，如图10。图10 多部署设置&emsp;&emsp;还是不行，后来修改了下nginx设置，将listen 443 ssl http2;的ssl和http2给去掉了，仍然不行，再后来突然又可以了…所以这个点还是不太明白具体的原因是什么，如果有人知道希望能留言告知一声。&emsp;&emsp;最终，只能推测为github api不稳定导致的结果，因为每次部署后就会出现类似的情况，但是过一会又没问题了。好了，这一章就算结束了，下一章参考hexo高阶教程：想让你的博客被更多的人在搜索引擎中搜到吗？Hexo 教程：Hexo 博客部署到腾讯云教程LINUX 上GIT默认安装路径","categories":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/categories/其他/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/tags/其他/"}]},{"title":"第二章-博客爬坑之旅","slug":"chapter2","date":"2018-11-06T03:34:00.000Z","updated":"2018-11-27T08:31:30.913Z","comments":true,"path":"2018/11/06/chapter2/","link":"","permalink":"https://blog.inil0119.com/2018/11/06/chapter2/","excerpt":"","text":"前言&emsp;&emsp;经过第一天的努力，博客已经可以正常运行了，但还是有很多地方需要优化。汉化&emsp;&emsp;以导航栏为例，现在导航栏都是英文，通过全局搜索可以发现/themes/pure/languages/default.yml即为默认的语言设置文件，如图1。图1 默认语言设置&emsp;&emsp;例如，可以修改menu选项下的参数，比如将home修改为中文首页，如图2，刷新网页后左侧导航的Home变为中文首页。&emsp;&emsp;注意：其实这里不需要处理中文语言，不需要一个个去改成对应中文（后来发现），可以通过设置主题配置文件_config.yml中的language字段为zh-CN即可。图2 修改默认语言增加文章目录&emsp;&emsp;当前版本Hexo可以通过在.md文章头部添加toc字段，如图3。图3 添加文章目录&emsp;&emsp;因为不熟悉，一开始全局找这个toc到底在哪里设置，但是找了好久都没找到，后来只能通过google来解决了。在这个过程中，来看一下涉及到的相关文件。一个文件是/themes/pure/layout/_partial/post/nav.ejs，如图4。图4 nav.js&emsp;&emsp;这个文件对应的就是文章底部的bar-footer，而文章目录对应就是toogle-toc，如图5。图5 bar-footer&emsp;&emsp;通过代码可以看到，文章目录显示的条件是if (!index &amp;&amp; theme.config.toc &amp;&amp; post.toc)，这里的index===false，不确定是什么意思，但是在/themes/pure/layout/post.ejs代码中有两个index=false，我推测这里的意思是只要是当前文章内容或者显示文章目录的就指定index为false，如图6；theme.config.toc可以通过主题配置文件_config.yml中的config.toc确认为true，意思是开启文章目录导航；最后post.toc是指文章是指当前文章是否开启TOC功能。用法本节开头已经介绍，这里需要注意，每篇文章开头都需要设置toc为true。图6 post.ejs&emsp;&emsp;另外一个文件是/themes/pure/layout/_partial/sidebar-toc.ejs，代码内容如图7，条件判断和上面的一致。图7 sidebar-toc.ejs搜索&emsp;&emsp;在pure主题的配置文件中找到search项。1234# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search baidu: false # you need to disable other search engines to use Baidu search&emsp;&emsp;尝试用insigth插件实现搜索功能，依据说明先安装hexo-generator-json-content。1$ npm install hexo-generator-json-content --save&emsp;&emsp;看到这里，突然想起不管是本地还是线上，系统都会报404的问题，有个文件没找到，而这个文件本地环境中是http://localhost:4000/content.json ，线上是http://blog.inil0119.com/content.json，这个文件是否和这个插件有关系呢？&emsp;&emsp;参考一下hexo pure主题推荐的博客https://blog.cofess.com/，打开控制台可以看到https://blog.cofess.com/content.json内容如图8。图8 参考content.json&emsp;&emsp;该json文件的内容刚好对应搜索框中的内容，如图9。图9 搜索框&emsp;&emsp;是否如猜想一般呢，继续往下试试吧。&emsp;&emsp;安装好插件之后，刷新本地服务，但是没有任何变化，重新构建下，刷新，页面如图10。图10 搜索弹框&emsp;&emsp;和猜想的一样，也就是说此时content.json已经存在了，验证下，如图11。图11 本地content.json代码压缩&emsp;&emsp;通过hexo-neat实现压缩功能。1$ npm install hexo-neat --save&emsp;&emsp;并在系统配置文件_config.yml中添加配置项。12345678910111213141516# hexo-neatneat_enable: trueneat_html: enable: true exclude: neat_css: enable: true exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'&emsp;&emsp;这样，的确可以将html、css、js等文件压缩，但是实际可能效果不是很明显，例如压缩前项目文件总大小为3.2mb，但是压缩后为3.2mb，可能大型项目的作用更大。评论&emsp;&emsp;pure主题集成了Disqus、友言、来必力、gitment、Gitalk、Valine六种评论系统，其中友言已经关停，Disqus是国外的一款评论系统，可能在国内支持不太友好，来必力的风格好像不太喜欢，因此最后选择Valine试试效果。虽然Valine还在开发阶段，但是看起来风格还不错，不知道最终的效果如何，现在上手。&emsp;&emsp;从官网上可以看到，Valine基于Learncloud，特性如下。快速安全Emoji 😉无后端实现MarkDown 全语法支持轻量易用(~15kb gzipped)文章阅读量统计 v1.2.0+&emsp;&emsp;具体设置参考quick start最后是这个样子的，如图12。怎么说呢，好像还是不太好，虽然可以非登录评论，但是后果是必须在评论框上方预设个人信息的输入框，对于比较追求完美的我，肯定是不能接受的，所以准备换gitment试试。图12 Valine评论框&emsp;&emsp;在主题配置文件总设置gitment，github个人数据可以通过https://api.github.com/users/用户名查看，只需要将comment.type换成gitment，填写githubID即可，最终效果如图13。图13 Gitment评论框&emsp;&emsp;非登录状态下不能评论，样式也没问题，不错。但是此时会发现有个链接报404，那是此时你还没有权限请求Github的API，需要通过创建一个新的授权应用来申请Github权限。&emsp;&emsp;首先进入settings/Developer settings，点击创建按钮，如图14。图14 创建授权应用&emsp;&emsp;填写号信息，点击注册按钮，如图15。图15 注册信息&emsp;&emsp;注意：若是绑定个人域名就不能使用yourname.github.io作为Homepage URL和Authorization callback URL。gitment会报Error: Comments Not Initialized错误。&emsp;&emsp;继续，将新生成的Client ID和Client Secret赋值给对应的配置属性，这里需要注意Homepage URL与Authorization callback URL都为当前博客地址，如果没有自己的域名博客地址，则填写github网址。另外，gitment.githubID可不填写，或者填入github id或者github用户名（建议用户名）。Gitalk&emsp;&emsp;由于Gitment初始化和汉化的问题，最后的最后，还是选择了Gitalk，虽然默认订阅issue（相关issue），每次有其他的评论都会邮件提醒比较烦（需手动关闭该issue订阅按钮），其他还不错，其余的功能还在摸索中。PV统计&emsp;&emsp;在主题配置文件中搜索pv属性，可以看到busuanzi和LeanCloud两种，试用了busuanzi之后发现其职能统计文章内的pv数，而不能在首页显示，所以决定用LeanCloud。&emsp;&emsp;首先登陆官网，并登陆控制台，创建应用如图16。图16 创建LeanCloud应用&emsp;&emsp;点击存储，点击创建Class，输入Class名称Counter，最后点击创建按钮，操作如图17。&emsp;&emsp;注意：Class名称必须为Counter，参考网上的说法是主题系统会访问应用的Class名为Counter。图17 创建Class&emsp;&emsp;点击设置，点击应用Key，可以找到App ID和App Key，并将其赋值给主题配置文件中对应的pv.leancloud.app_id与pv.leancloud.app_key；接着在设置中点击安全中心，在Web安全域名下输入博客的域名地址，只有该域名可以访问LeanCloud系统，因此只会记录在这个域名下的访客数据。&emsp;&emsp;重新构建部署。&emsp;&emsp;注意：如果在调试阶段，还需要把http://127.0.0.1:4000添加进去。记得之后要删掉。&emsp;&emsp;刷新页面，发现页面标题下显示计数icon且数值为0，但是在控制台显示Uncaught ReferenceError: AV is not defined问题。&emsp;&emsp;Oops…something get wrong! 搞了半天，官网论坛和google都走了一遍，没看到有效的解决方式，如果有人知道如何解决，可以在评论处告知，好吧，还是换成busuanzi吧…字数统计1$ npm install hexo-wordcount --save&emsp;&emsp;然后在主题配置文件中将postCount.enable设置为true，默认统计和阅读时长为开启状态。hexo-admin&emsp;&emsp;hexo-admin可以编辑和创建静态页面内容，并通过设置脚本快速发布到github仓库。&emsp;&emsp;首先安装npm包12$ npm install hexo-admin --save$ hexo s -d&emsp;&emsp;然后，浏览器输入http://localhost:4000/admin如图18。图18 Hexo Admin管理界面&emsp;&emsp;进入Settings，点击Setup authentification here，设置管理员信息，把生成的配置代码赋值到系统配置文件中。&emsp;&emsp;配置代码如下：12345# hexo-admin authentificationadmin: username: myfavoritename password_hash: be121740bf988b2225a313fa1f107ca1 # bcrypt hash of your password secret: a secret something # make the cookies securehexo clean -&gt; hexo g -&gt; hexo s&emsp;&emsp;刷新页面，显示登录界面/admin/login，输入之前在Settings页面设置的用户名和密码，登录admin系统。点击网站标题右侧的编辑icon进入编辑模式，如图19。图19 Admin系统编辑文章&emsp;&emsp;编辑完成，进入Deploy页面，点击Deploy发布，出现错误提示如图20，原因是没有找到部署命令，在刚刚复制的配置代码中增加deployCommand: ‘./command/hexo-generate.sh’。图20 部署错误提示&emsp;&emsp;这里的deployCommand的功能对应点击Deploy按钮的作用，即将静态页面提交到github。&emsp;&emsp;在项目根目录下进行如下操作：12$ mkdir command &amp;&amp; cd command$ touch hexo-generate.sh &amp;&amp; vim hexo-generate.sh&emsp;&emsp;在hexo-generate.sh文件中输入：123#!/usr/bin/env shhexo cleanhexo g -d&emsp;&emsp;修改权限：1$ chmod +x hexo-generate.sh豆瓣书单&emsp;&emsp;首先在主题配置文件中设置douban.user为豆瓣的账号名，然后将/themes/pure/_source/books复制到/source下面，刷新页面如图21。图21 书单功能设置七牛云图片存储&emsp;&emsp;将图片资源上传到七牛云，这样能减少服务器的存储压力，虽然个人博客图片不多，通过图片压缩能进一步的减少存储空间，但是对于以后开发大型项目来说，这一步也是必须的。&emsp;&emsp;首先，登录七牛云，进入对象存储页面，如图22。图22 对象存储&emsp;&emsp;注册为新用户后，或者之前没有存储空间的，必须先新建存储空间，然后才能把你所需要文件上传的到制定的存储空间里面，如图23。图23 新建存储对象&emsp;&emsp;存储空间创建以后，点击上传文件。设置路径前缀可以和你本地的相对路径类似，最大化的保持和本地路径一致，这样便于后期管理，如图24。图24 上传图片&emsp;&emsp;最后，将外链默认域名拼接文件名后得到的地址替换本地的图片地址，如图25。图25 图片地址&emsp;&emsp;现在把博客中的所有的图片路径替换为七牛云中的图片地址，对比可知，替换前的部署文件大小为4034535字节（约3.85），替换后的部署文件大小为1353803字节（约1.29mb），节省了2.56mb图片资源，通过对比可以发现七牛云中存储的图片资源大小刚好是2.56mb，如图26。图26 节省的存储大小分类、标签…&emsp;&emsp;同理，分类、标签等也可以通过类似豆瓣书单的过程实现。sitemap站点地图12$ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save&emsp;&emsp;在系统配置文件中设置如下代码：12345# sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml本章总结就到这里，下一章处理SEO相关内容。参考Hexo—如何设置文章目录（TOC）Hexo博客主题pure使用说明Hexo博客主题pure修改记录hexo+github+gitment评论系统hexo 通过hexo-admin进行全自动发布文章…","categories":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/categories/其他/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/tags/其他/"}]},{"title":"第一章-开启博客之旅","slug":"chapter1","date":"2018-11-05T14:25:27.000Z","updated":"2018-11-27T07:58:41.588Z","comments":true,"path":"2018/11/05/chapter1/","link":"","permalink":"https://blog.inil0119.com/2018/11/05/chapter1/","excerpt":"","text":"前言&emsp;&emsp;颓废了许久，不想继续这种碌碌无为的生活，用博客写点（搬运）东西，不管是技术上还是生活中，也许这样还能找回一点点的激情和动力。长话短说，正式开始我的博客的第一章。安装Hexo1$ npm install -g hexo-cli后续可以通过 npm update -g hexo更新创建项目123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install运行12$ hexo g # hexo generate$ hexo s # hexo server，服务地址http://localhost:4000/&emsp;&emsp;运行如图1。图1 landscape更改主题&emsp;&emsp;打开系统配置文件_config.yml，定位到theme字段，默认为landsacpe，如图1。通过更改该值可以改变系统主题，但首先要找到一个合适的主题，可以在这里寻找适合自己的主题，并可以通过git clone将主题引入自己的博客。&emsp;&emsp;这里以next为例，通过github搜索next，这里需要注意hexo主题next有两个如图2，iissnan貌似已经停更，需要选择theme-next。图2 github中next主题&emsp;&emsp;在当前根目录下，git clone https://github.com/theme-next/hexo-theme-next themes/next 并将_config.yml中theme改为next。&emsp;&emsp;Ctrl+C停止服务，并在终端重新输入：123$ hexo clean$ hexo g$ hexo s&emsp;&emsp;刷新http://localhost:4000/，新的主题如图3。图3 lnext默认主题Muse修改Next配置文件&emsp;&emsp;Next有4中主题，可以修改/themes/next/_config.yml中的scheme切换主题。切换scheme可以预览各种主题的区别：Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白Mist - Muse 的紧凑版本，整洁有序的单栏外观Pisces - 双栏 Scheme，小家碧玉似的清新Gemini - 双栏 Scheme，与 Pisces 几乎一样&emsp;&emsp;试用Gemini主题如图4。图4 Geminihexo配置&emsp;&emsp;具体的配置说明可以参考官网配置，一开始只需要关注_config.yml系统配置文件、/themes主题文件夹、和/source/_posts（新创建的文章将保存在该文件夹）。常用命令1234567$ hexo new \"postName\" #新建文章$ hexo new page \"pageName\" #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，'Ctrl + C'关闭server）$ hexo deploy #将.deploy目录部署到GitHub$ hexo help # 查看帮助$ hexo version #查看Hexo的版本github配置&emsp;&emsp;创建新项目，注意repo名称格式为用户名.github.io，例如iNiL0119.github.io，然后在浏览器中输入https://inil0119.github.io/ 测试是否创建成功。&emsp;&emsp;设置系统配置文件_config.yml，修改deploy配置项如图5。图5 github部署设置&emsp;&emsp;注意：冒号后面必须空一格部署1$ hexo d # hexo deploy&emsp;&emsp;此时报错：ERROR Deployer not found: git&emsp;&emsp;解决办法：1$ npm install hexo-deployer-git --save&emsp;&emsp;再次运行hexo d，成功部署，此时/public代码上传到github，如图6。图6 部署到github&emsp;&emsp;刷新https://inil0119.github.io/，显示最新Next Gemini主题。&emsp;&emsp;对比Next最终还是决定用pure主题，因为比较小清新，而且功能比较完整，系统界面如图7。图7 pure主题绑定域名&emsp;&emsp;解析设置如图8。图8 域名解析&emsp;&emsp;浏览器输入inil0119.com，网站404错误如图9，说明域名已经映射到github网站，还需要设置github网站向域名的映射。图9 404错误&emsp;&emsp;进入github仓库，点击Create new file，文件名为CNAME如图10，并单击下方的Commit new file按钮。图10 创建CNAME文件&emsp;&emsp;之后，在浏览器输入最新的域名地址，成功显示Blog内容，说明绑定成功了。部署问题&emsp;&emsp;再重新走一遍部署流程hexo clean -&gt; g -&gt; d，此时发现网站又变成404了，github上看看发现原来的CNAME被强制push掉了，原来如此。解决方式也很简单，就是在本地项目中添加CNAME文件，注意将CNAME添加到/source目录下，部署之后就正常了。其他Error&emsp;&emsp;1. 出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line …&emsp;&emsp;解决办法：_config.yml中配置项的冒号后面要用空格隔开&emsp;&emsp;2. 中文乱码问题&emsp;&emsp;解决办法：将内容所在文件的编码改为UTF8格式参考Hexo官网用Hexo + github搭建自己的博客 — 再也不用羡慕别人了！Hexo搭建个人博客并部署到Github新手用hexo和github搭建属于自己的博客","categories":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/categories/其他/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://blog.inil0119.com/tags/其他/"}]}]}